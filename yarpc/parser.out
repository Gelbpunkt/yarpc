Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> query
Rule 1     query -> action_noargs SEMICOLON
Rule 2     query -> action_args STRING SEMICOLON
Rule 3     query -> action_args STRING TO destination SEMICOLON
Rule 4     action_noargs -> PING
Rule 5     action_noargs -> INFO
Rule 6     action_noargs -> CONNECT
Rule 7     action_args -> REQUEST
Rule 8     action_args -> RESPOND
Rule 9     destination -> INTEGER
Rule 10    destination -> ALL

Terminals, with rules where they appear

ALL                  : 10
CONNECT              : 6
INFO                 : 5
INTEGER              : 9
PING                 : 4
REQUEST              : 7
RESPOND              : 8
SEMICOLON            : 1 2 3
STRING               : 2 3
TO                   : 3
error                : 

Nonterminals, with rules where they appear

action_args          : 2 3
action_noargs        : 1
destination          : 3
query                : 0

Parsing method: LALR

state 0

    (0) S' -> . query
    (1) query -> . action_noargs SEMICOLON
    (2) query -> . action_args STRING SEMICOLON
    (3) query -> . action_args STRING TO destination SEMICOLON
    (4) action_noargs -> . PING
    (5) action_noargs -> . INFO
    (6) action_noargs -> . CONNECT
    (7) action_args -> . REQUEST
    (8) action_args -> . RESPOND

    PING            shift and go to state 4
    INFO            shift and go to state 5
    CONNECT         shift and go to state 6
    REQUEST         shift and go to state 7
    RESPOND         shift and go to state 8

    query                          shift and go to state 1
    action_noargs                  shift and go to state 2
    action_args                    shift and go to state 3

state 1

    (0) S' -> query .



state 2

    (1) query -> action_noargs . SEMICOLON

    SEMICOLON       shift and go to state 9


state 3

    (2) query -> action_args . STRING SEMICOLON
    (3) query -> action_args . STRING TO destination SEMICOLON

    STRING          shift and go to state 10


state 4

    (4) action_noargs -> PING .

    SEMICOLON       reduce using rule 4 (action_noargs -> PING .)


state 5

    (5) action_noargs -> INFO .

    SEMICOLON       reduce using rule 5 (action_noargs -> INFO .)


state 6

    (6) action_noargs -> CONNECT .

    SEMICOLON       reduce using rule 6 (action_noargs -> CONNECT .)


state 7

    (7) action_args -> REQUEST .

    STRING          reduce using rule 7 (action_args -> REQUEST .)


state 8

    (8) action_args -> RESPOND .

    STRING          reduce using rule 8 (action_args -> RESPOND .)


state 9

    (1) query -> action_noargs SEMICOLON .

    $end            reduce using rule 1 (query -> action_noargs SEMICOLON .)


state 10

    (2) query -> action_args STRING . SEMICOLON
    (3) query -> action_args STRING . TO destination SEMICOLON

    SEMICOLON       shift and go to state 11
    TO              shift and go to state 12


state 11

    (2) query -> action_args STRING SEMICOLON .

    $end            reduce using rule 2 (query -> action_args STRING SEMICOLON .)


state 12

    (3) query -> action_args STRING TO . destination SEMICOLON
    (9) destination -> . INTEGER
    (10) destination -> . ALL

    INTEGER         shift and go to state 14
    ALL             shift and go to state 15

    destination                    shift and go to state 13

state 13

    (3) query -> action_args STRING TO destination . SEMICOLON

    SEMICOLON       shift and go to state 16


state 14

    (9) destination -> INTEGER .

    SEMICOLON       reduce using rule 9 (destination -> INTEGER .)


state 15

    (10) destination -> ALL .

    SEMICOLON       reduce using rule 10 (destination -> ALL .)


state 16

    (3) query -> action_args STRING TO destination SEMICOLON .

    $end            reduce using rule 3 (query -> action_args STRING TO destination SEMICOLON .)

